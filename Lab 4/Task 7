#include <iostream>
using namespace std;

void bubbleSort(int array[], int n, int &comp, int &swaps)
{
    for(int i=0;i<n-1;i++)
    {
        for(int j=0;j<n-i-1;j++)
        {
            comp++;
            if(array[j]>array[j+1])
            {
                int t=array[j];
                array[j]=array[j+1];
                array[j+1]=t;
                swaps++;
            }
        }
    }
}

void insertionSort(int array[], int n, int &comp, int &swaps)
{
    for(int i=1;i<n;i++)
    {
        int key=array[i];
        int j=i-1;
        while(j>=0)
        {
            comp++;
            if(array[j]>key)
            {
                array[j+1]=array[j];
                swaps++;
                j--;
            }
            else break;
        }
        array[j+1]=key;
    }
}

void shellSort(int array[], int n, int &comp, int &swaps)
{
    for(int gap=n/2;gap>0;gap/=2)
    {
        for(int i=gap;i<n;i++)
        {
            int temp=array[i];
            int j=i;
            while(j>=gap)
            {
                comp++;
                if(array[j-gap]>temp)
                {
                    array[j]=array[j-gap];
                    swaps++;
                    j-=gap;
                }
                else break;
            }
            array[j]=temp;
        }
    }
}

int main()
{
    int n=1000;
    int array[1000];
    for(int i=0;i<n;i++)
    {
        array[i]=rand()%10000;
    }

    int array1[1000],array2[1000],array3[1000];
    for(int i=0;i<n;i++)
    {
        array1[i]=array[i];
        array2[i]=array[i];
        array3[i]=array[i];
    }

    int comp=0,swaps=0;
    bubbleSort(array1,n,comp,swaps);
    cout<<"Bubble Sort: Comparisons="<<comp<<" Swaps="<<swaps<<"\n";

    comp=0;swaps=0;
    insertionSort(array2,n,comp,swaps);
    cout<<"Insertion Sort: Comparisons="<<comp<<" Swaps="<<swaps<<"\n";

    comp=0;swaps=0;
    shellSort(array3,n,comp,swaps);
    cout<<"Shell Sort: Comparisons="<<comp<<" Swaps="<<swaps<<"\n";
}
